services:
  web:
    build:
      context: .
      dockerfile: .dockerfile
    container_name: django_web
    command: >
      sh -c "python manage.py migrate &&
             gunicorn ai_photo_bot.asgi:application -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000 --workers 1"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  redis:
    image: "redis:6.2-alpine"
    container_name: redis_broker
    command: redis-server --maxmemory 100mb --maxmemory-policy allkeys-lru --save ""
    ports:
      - "6379:6379"

  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports: 
      - "5432:5432"

  worker:
    build:
      context: .
      dockerfile: .dockerfile
    container_name: celery_worker
    command: celery -A ai_photo_bot worker -l info --pool=solo
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - web
    env_file:
      - .env

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web

volumes: 
  postgres_data:
